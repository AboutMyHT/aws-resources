AWSTemplateFormatVersion: "2010-09-09"
Description: Create all of the resources neccesary for the aboutmyhometown.com website. This does no include a few resources like registered domains and ACM certificates.
Parameters:
  DomainName:
    Type: String
    Description: The DNS name for the website
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
Resources:
  aboutmyhometownCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: index.html
        Origins:
          - ConnectionTimeout: 10
            OriginAccessControlId: ""
            ConnectionAttempts: 3
            OriginCustomHeaders: []
            DomainName:
              !Join ["", ["www.", !Ref "DomainName", ".s3.amazonaws.com"]]
            OriginShield:
              Enabled: false
            OriginPath: ""
            Id: !Join ["", ["www.", !Ref "DomainName", ".s3.amazonaws.com"]]
            CustomOriginConfig:
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - SSLv3
                - TLSv1
                - TLSv1.1
                - TLSv1.2
              HTTPSPort: 443
              HTTPPort: 80
              OriginProtocolPolicy: http-only
        ViewerCertificate:
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
          AcmCertificateArn: >-
            arn:aws:acm:us-east-1:211125302470:certificate/eab948a5-95f3-4cb9-aeb8-af6b9e549934
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          Compress: true
          TrustedKeyGroups: []
          FunctionAssociations: []
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          LambdaFunctionAssociations: []
          SmoothStreaming: false
          TargetOriginId:
            !Join ["", ["www.", !Ref "DomainName", ".s3.amazonaws.com"]]
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId:
            Ref: aboutmyhometownCloudFrontCachePolicy
          TrustedSigners: []
          FieldLevelEncryptionId: ""
        Staging: false
        CustomErrorResponses: []
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases:
          - !Ref "DomainName"
          - !Join ["", ["www.", !Ref "DomainName"]]
        IPV6Enabled: true
        WebACLId: ""
        HttpVersion: http2and3
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: none
        CacheBehaviors: []
    DependsOn:
      - aboutmyhometownS3Bucket

  aboutmyhometownCloudFrontCachePolicy:
    Type: "AWS::CloudFront::CachePolicy"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      CachePolicyConfig:
        Comment: Policy with caching enabled. Supports Gzip and Brotli compression.
        MinTTL: 1
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: none
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: none
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingGzip: true
        DefaultTTL: 86400
        Name: aboutmyhometownCachingOptimized

  aboutmyhometownCloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      OriginAccessControlConfig:
        Description: The origin access control for the CloudFront distribution
        Name: aboutmyhometownOACConfig
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  aboutmyhometownS3Bucket:
    Type: "AWS::S3::Bucket"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: !Join ["", ["www.", !Ref "DomainName"]]
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  aboutmyhometownS3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      Bucket:
        Ref: aboutmyhometownS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Resource: !Join ["", ["arn:aws:s3:::www.", !Ref "DomainName", /*]]
            Action: "s3:GetObject"
            Effect: Allow
            Principal:
              Service: "cloudfront.amazonaws.com"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::Region}:distribution/${aboutmyhometownCloudFrontDistribution}"
            Sid: AllowCloudFrontServicePrincipalReadOnly

  aboutmyhometownRoute53HostedZone:
    Type: "AWS::Route53::HostedZone"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      HostedZoneConfig:
        Comment: HostedZone created by Route53 Registrar
      Name: !Join ["", [!Ref "DomainName", .]]
    DependsOn:
      - aboutmyhometownCloudFrontDistribution

  aboutmyhometownRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      HostedZoneName: !Join ["", [!Ref "DomainName", .]]
      RecordSets:
        - Name: !Ref "DomainName"
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt [aboutmyhometownCloudFrontDistribution, DomainName]

  PrimaryVPC:
    Type: "AWS::EC2::VPC"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 172.31.0.0/16
      EnableDnsSupport: true
      InstanceTenancy: default
      EnableDnsHostnames: true
      Tags: []
